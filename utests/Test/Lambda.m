//
//  Lambda
//  Test
//
//  Source generated by Haxe Objective-C target
//

#import "Lambda.h"

@implementation Lambda

+ (NSMutableArray*) array:(id)it{
	
	
	NSMutableArray *a = [[NSMutableArray alloc] init];
	{
		id _it = [it iterator];
		while ( [_it hasNext] ) do {
			id i = [_it next];
			[a push:i];
		}
	}
	return a;
}
+ (List*) list:(id)it{
	
	
	List *l = [[List alloc] init];
	{
		id _it = [it iterator];
		while ( [_it hasNext] ) do {
			id i = [_it next];
			[l add:i];
		}
	}
	return l;
}
+ (BOOL) has:(id)it elt:(id)elt{
	
	{
		id _it = [it iterator];
		while ( [_it hasNext] ) do {
			id x = [_it next];
			if (x == elt) return YES;
		}
	}
	return NO;
}
+ (int) count:(id)it pred:(id)pred{
	
	// Optional arguments
	if (!pred) pred = nil;
	
	int n = 0;
	if (pred == nil) {
		
		{
			id _it = [it iterator];
			while ( [_it hasNext] ) do {
				id _ = [_it next];
				n++;
			}
		}
	}
	else {
		
		{
			id _it2 = [it iterator];
			while ( [_it2 hasNext] ) do {
				id x = [_it2 next];
				if ([pred:x]) n++;
			}
		}
	}
	return n;
}

@end
