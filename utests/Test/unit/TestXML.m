//
//  TestXML
//  Test
//
//  Source generated by Haxe Objective-C target
//

#import "../unit/TestXML.h"

@implementation TestXML

- (void) checkExc:(Xml*)x pos:(id)pos{
	// Optional arguments
	if (!pos) pos = nil;
	
	[self exc:^(){
		[x get_nodeName];
	} pos:pos];
	[self exc:^(){
		[x get_nodeValue];
	} pos:pos];
	[self exc:^(){
		[x attributes];
	} pos:pos];
	[self exc:^(){
		[x get:[@"att" mutableCopy]];
	} pos:pos];
	[self exc:^(){
		[x exists:[@"att" mutableCopy]];
	} pos:pos];
}
- (void) testBasic{
	
	Xml *x = [Xml parse:[@"<a href=\"hello\">World<b/></a>" mutableCopy]];
	[self t:binop[Xml compare:[x firstChild] :[x firstChild]] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"16", @"className":@"unit.TestXML", @"methodName":@"testBasic"}];
	[self eq:x.nodeType v2:-TEnum- pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"18", @"className":@"unit.TestXML", @"methodName":@"testBasic"}];
	[self checkExc:x pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"19", @"className":@"unit.TestXML", @"methodName":@"testBasic"}];
	x = [x firstChild];
	[self eq:x.nodeType v2:-TEnum- pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"22", @"className":@"unit.TestXML", @"methodName":@"testBasic"}];
	[self eq:[x get_nodeName] v2:[@"a" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"26", @"className":@"unit.TestXML", @"methodName":@"testBasic"}];
	[x set_nodeName:[@"b" mutableCopy]];
	[self eq:[x get_nodeName] v2:[@"b" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"28", @"className":@"unit.TestXML", @"methodName":@"testBasic"}];
	[self eq:[x toString] v2:[@"<b href=\"hello\">World<b/></b>" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"29", @"className":@"unit.TestXML", @"methodName":@"testBasic"}];
	[self eq:[x get:[@"href" mutableCopy]] v2:[@"hello" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"32", @"className":@"unit.TestXML", @"methodName":@"testBasic"}];
	[self eq:[x get:[@"other" mutableCopy]] v2:nil pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"33", @"className":@"unit.TestXML", @"methodName":@"testBasic"}];
	[self eq:[x exists:[@"href" mutableCopy]] v2:YES pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"34", @"className":@"unit.TestXML", @"methodName":@"testBasic"}];
	[self eq:[x exists:[@"other" mutableCopy]] v2:NO pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"35", @"className":@"unit.TestXML", @"methodName":@"testBasic"}];
	[self eq:[[Lambda array:[@{
		@"iterator":[attributes copy],
	} mutableCopy]] join:[@"#" mutableCopy]] v2:[@"href" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"36", @"className":@"unit.TestXML", @"methodName":@"testBasic"}];
	[x remove:[@"href" mutableCopy]];
	[self eq:[[Lambda array:[@{
		@"iterator":[attributes copy],
	} mutableCopy]] join:[@"#" mutableCopy]] v2:[@"" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"38", @"className":@"unit.TestXML", @"methodName":@"testBasic"}];
	[self eq:[x toString] v2:[@"<b>World<b/></b>" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"39", @"className":@"unit.TestXML", @"methodName":@"testBasic"}];
	[self eq:[[x firstChild] get_nodeValue] v2:[@"World" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"42", @"className":@"unit.TestXML", @"methodName":@"testBasic"}];
	[self eq:[[x firstElement] get_nodeName] v2:[@"b" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"43", @"className":@"unit.TestXML", @"methodName":@"testBasic"}];
	[self exc:^(){
		[Xml parse:[@"<node>" mutableCopy]];
	} pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"46", @"className":@"unit.TestXML", @"methodName":@"testBasic"}];
}
- (void) testFormat{
	[self eq:[[Xml parse:[@"<a><b><c/> <d/> \n <e/><![CDATA[<x>]]></b></a>" mutableCopy]] toString] v2:[@"<a><b><c/> <d/> \n <e/><![CDATA[<x>]]></b></a>" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"54", @"className":@"unit.TestXML", @"methodName":@"testFormat"}];
	[self eq:[[Xml parse:[@"\"" mutableCopy]] toString] v2:[@"\"" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"59", @"className":@"unit.TestXML", @"methodName":@"testFormat"}];
}
- (void) testComplex{
	
	NSMutableString *header = [@"<?some header?>" mutableCopy];
	
	NSMutableString *doctype = [@"<!DOCTYPE root SYSTEM \"\">" mutableCopy];
	
	NSMutableString *comment = [@"<!--Comment-->" mutableCopy];
	
	NSMutableString *xml = [@"<html><body><![CDATA[<a href=\"CDATA\"/>&lt;]]></body></html>" mutableCopy];
	
	Xml *x = [Xml parse:[[[header stringByAppendingString:doctype] stringByAppendingString:comment] stringByAppendingString:xml]];
	[self eq:[x toString] v2:[[[header stringByAppendingString:doctype] stringByAppendingString:comment] stringByAppendingString:xml] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"87", @"className":@"unit.TestXML", @"methodName":@"testComplex"}];
}
- (void) testWhitespaces{
	
	Xml *x = [Xml parse:[@"<a> </a><b></b> \n <c/>" mutableCopy]];
	
	NSMutableArray *childs = [Lambda array:x];
	[self eq:childs.length v2:4 pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"96", @"className":@"unit.TestXML", @"methodName":@"testWhitespaces"}];
	
	Xml *d = [childs hx_objectAtIndex:2];
	[self eq:d.nodeType v2:-TEnum- pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"99", @"className":@"unit.TestXML", @"methodName":@"testWhitespaces"}];
	[self eq:[d get_nodeValue] v2:[@" \n " mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"100", @"className":@"unit.TestXML", @"methodName":@"testWhitespaces"}];
	id el = [x elements];
	
	Xml *a = [el[@"next"]];
	[self eq:[[a firstChild] get_nodeValue] v2:[@" " mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"104", @"className":@"unit.TestXML", @"methodName":@"testWhitespaces"}];
	
	Xml *b = [el[@"next"]];
	[self eq:[[b firstChild] get_nodeValue] v2:[@"" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"110", @"className":@"unit.TestXML", @"methodName":@"testWhitespaces"}];
	[self eq:[[[x toString] split:[@"\n" mutableCopy]] join:[@"\\n" mutableCopy]] v2:[@"<a> </a><b></b> \\n <c/>" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"111", @"className":@"unit.TestXML", @"methodName":@"testWhitespaces"}];
	
	Xml *c = [el[@"next"]];
	[self eq:[c firstChild] v2:nil pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"114", @"className":@"unit.TestXML", @"methodName":@"testWhitespaces"}];
}
- (void) testCreate{
	[self eq:[[Xml createDocument] toString] v2:[@"" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"118", @"className":@"unit.TestXML", @"methodName":@"testCreate"}];
	[self eq:[[Xml createPCData:[@"Hello" mutableCopy]] toString] v2:[@"Hello" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"119", @"className":@"unit.TestXML", @"methodName":@"testCreate"}];
	[self eq:[[Xml createCData:[@"<x>" mutableCopy]] toString] v2:[@"<![CDATA[<x>]]>" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"125", @"className":@"unit.TestXML", @"methodName":@"testCreate"}];
	[self eq:[[Xml createComment:[@"Hello" mutableCopy]] toString] v2:[@"<!--Hello-->" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"126", @"className":@"unit.TestXML", @"methodName":@"testCreate"}];
	[self eq:[[Xml createProcessingInstruction:[@"XHTML" mutableCopy]] toString] v2:[@"<?XHTML?>" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"133", @"className":@"unit.TestXML", @"methodName":@"testCreate"}];
	[self eq:[[Xml createDocType:[@"XHTML" mutableCopy]] toString] v2:[@"<!DOCTYPE XHTML>" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"134", @"className":@"unit.TestXML", @"methodName":@"testCreate"}];
	[self eq:[[[Xml parse:[@"<!--Hello-->" mutableCopy]] firstChild] get_nodeValue] v2:[@"Hello" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"137", @"className":@"unit.TestXML", @"methodName":@"testCreate"}];
	
	Xml *c = [Xml createComment:[@"Hello" mutableCopy]];
	[self eq:[c get_nodeValue] v2:[@"Hello" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"139", @"className":@"unit.TestXML", @"methodName":@"testCreate"}];
	[c set_nodeValue:[@"Blabla" mutableCopy]];
	[self eq:[c get_nodeValue] v2:[@"Blabla" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"141", @"className":@"unit.TestXML", @"methodName":@"testCreate"}];
	[self eq:[c toString] v2:[@"<!--Blabla-->" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"142", @"className":@"unit.TestXML", @"methodName":@"testCreate"}];
	[self eq:[[[Xml parse:[@"<![CDATA[Hello]]>" mutableCopy]] firstChild] get_nodeValue] v2:[@"Hello" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"143", @"className":@"unit.TestXML", @"methodName":@"testCreate"}];
	
	Xml *c1 = [Xml createCData:[@"Hello" mutableCopy]];
	[self eq:[c1 get_nodeValue] v2:[@"Hello" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"145", @"className":@"unit.TestXML", @"methodName":@"testCreate"}];
	[c1 set_nodeValue:[@"Blabla" mutableCopy]];
	[self eq:[c1 get_nodeValue] v2:[@"Blabla" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"147", @"className":@"unit.TestXML", @"methodName":@"testCreate"}];
	[self eq:[c1 toString] v2:[@"<![CDATA[Blabla]]>" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"148", @"className":@"unit.TestXML", @"methodName":@"testCreate"}];
	[self eq:[[Xml createPCData:[@"Hello" mutableCopy]] get_nodeValue] v2:[@"Hello" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"149", @"className":@"unit.TestXML", @"methodName":@"testCreate"}];
}
- (void) testNS{
	
	Xml *x = [[Xml parse:[@"<xhtml:br xmlns:xhtml=\"http://www.w3.org/1999/xhtml\" xhtml:alt=\"test\"><hello/></xhtml:br>" mutableCopy]] firstChild];
	[self eq:x.nodeType v2:-TEnum- pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"154", @"className":@"unit.TestXML", @"methodName":@"testNS"}];
	[self eq:[x get_nodeName] v2:[@"xhtml:br" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"155", @"className":@"unit.TestXML", @"methodName":@"testNS"}];
	[self t:[x exists:[@"xhtml:alt" mutableCopy]] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"156", @"className":@"unit.TestXML", @"methodName":@"testNS"}];
	[self eq:[x get:[@"xhtml:alt" mutableCopy]] v2:[@"test" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"157", @"className":@"unit.TestXML", @"methodName":@"testNS"}];
	[self eq:[x get:[@"xhtml:other" mutableCopy]] v2:nil pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"158", @"className":@"unit.TestXML", @"methodName":@"testNS"}];
	[x set:[@"xhtml:alt" mutableCopy] value:[@"bye" mutableCopy]];
	[self eq:[x get:[@"xhtml:alt" mutableCopy]] v2:[@"bye" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"160", @"className":@"unit.TestXML", @"methodName":@"testNS"}];
	
	Xml *h = [x firstElement];
	[self eq:[h get_nodeName] v2:[@"hello" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"163", @"className":@"unit.TestXML", @"methodName":@"testNS"}];
	[h set_nodeName:[@"em" mutableCopy]];
	[self eq:[h get_nodeName] v2:[@"em" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"165", @"className":@"unit.TestXML", @"methodName":@"testNS"}];
	[self eq:[Lambda count:[@{
		@"iterator":[((id)($this:(snd ctx.path)) id f = elementsNamed:
	__r__ = ^(){
		return [f:[@"em" mutableCopy]];
	}
	return __r__{
		
		id* __r__}
	}(self)) copy],
	} mutableCopy] pred:nil] v2:1 pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"167", @"className":@"unit.TestXML", @"methodName":@"testNS"}];
	[h set_nodeName:[@"xhtml:em" mutableCopy]];
	[self eq:[Lambda count:[@{
		@"iterator":[((id)($this:(snd ctx.path)) id f = elementsNamed:
	__r__2 = ^(){
		return [f:[@"xhtml:em" mutableCopy]];
	}
	return __r__2{
		
		id* __r__2}
	}(self)) copy],
	} mutableCopy] pred:nil] v2:1 pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"171", @"className":@"unit.TestXML", @"methodName":@"testNS"}];
	[self eq:[Lambda count:[@{
		@"iterator":[((id)($this:(snd ctx.path)) id f = elementsNamed:
	__r__3 = ^(){
		return [f:[@"em" mutableCopy]];
	}
	return __r__3{
		
		id* __r__3}
	}(self)) copy],
	} mutableCopy] pred:nil] v2:0 pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"172", @"className":@"unit.TestXML", @"methodName":@"testNS"}];
	[self eq:[h get_nodeName] v2:[@"xhtml:em" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"174", @"className":@"unit.TestXML", @"methodName":@"testNS"}];
}
- (void) testNodetype{
	
	Xml *element = [Xml createElement:[@"x" mutableCopy]];
	
	NSMutableArray *l = [@[[Xml createPCData:[@"x" mutableCopy]], [Xml createCData:[@"x" mutableCopy]], [Xml createDocType:[@"x" mutableCopy]], [Xml createProcessingInstruction:[@"x" mutableCopy]], [Xml createComment:[@"x" mutableCopy]]] mutableCopy];
	{
		int _g = 0;
		while (_g < l.length) {
			
			Xml *xml = [l hx_objectAtIndex:_g];
			++_g;
			[self exc:^(){
				[xml firstChild];
			} pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"183", @"className":@"unit.TestXML", @"methodName":@"testNodetype"}];
			[self exc:^(){
				[xml firstElement];
			} pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"184", @"className":@"unit.TestXML", @"methodName":@"testNodetype"}];
			[self exc:^(){
				[xml elements];
			} pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"185", @"className":@"unit.TestXML", @"methodName":@"testNodetype"}];
			[self exc:^(){
				[xml elementsNamed:[@"x" mutableCopy]];
			} pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"186", @"className":@"unit.TestXML", @"methodName":@"testNodetype"}];
			[self exc:^(){
				[xml addChild:element];
			} pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"187", @"className":@"unit.TestXML", @"methodName":@"testNodetype"}];
			[self exc:^(){
				[xml removeChild:element];
			} pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"188", @"className":@"unit.TestXML", @"methodName":@"testNodetype"}];
			[self exc:^(){
				[xml insertChild:element pos:0];
			} pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"189", @"className":@"unit.TestXML", @"methodName":@"testNodetype"}];
			[self exc:^(){
				{
					id _it = [xml iterator];
					while ( [_it hasNext] ) do {
						Xml x = [_it next];
						nil;
					}
				}
			} pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"190", @"className":@"unit.TestXML", @"methodName":@"testNodetype"}];
		}
	}
}
- (void) testEntities{
	
	NSMutableArray *entities = [@[[@"&lt;" mutableCopy], [@"&gt;" mutableCopy], [@"&quot;" mutableCopy], [@"&amp;" mutableCopy], [@"&apos;" mutableCopy], [@"&nbsp;" mutableCopy], [@"&euro;" mutableCopy], [@"&#64;" mutableCopy], [@"&#244;" mutableCopy], [@"&#x3F;" mutableCopy], [@"&#xFF;" mutableCopy]] mutableCopy];
	
	NSMutableArray *values = [entities copy];
	{
		int _g1 = 0; int _g = entities.length;
		while (_g1 < _g) {
			int i = _g1++;
			[self infos:[entities hx_objectAtIndex:i]];
			[self eq:[[[Xml parse:[entities hx_objectAtIndex:i]] firstChild] get_nodeValue] v2:[values hx_objectAtIndex:i] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"217", @"className":@"unit.TestXML", @"methodName":@"testEntities"}];
		}
	}
}
- (void) testCustomXmlParser{
	
	NSMutableArray *entities = [@[[@"&lt;" mutableCopy], [@"&gt;" mutableCopy], [@"&quot;" mutableCopy], [@"&amp;" mutableCopy], [@"&apos;" mutableCopy], [@"&euro;" mutableCopy], [@"&#64;" mutableCopy], [@"&#244;" mutableCopy], [@"&#x3F;" mutableCopy], [@"&#xFF;" mutableCopy]] mutableCopy];
	
	NSMutableArray *values = [@[[@"<" mutableCopy], [@">" mutableCopy], [@"\"" mutableCopy], [@"&" mutableCopy], [@"'" mutableCopy], [@"&euro;" mutableCopy], [@"@" mutableCopy], [NSMutableString:@244], [@"?" mutableCopy], [NSMutableString:@255]] mutableCopy];
	{
		int _g1 = 0; int _g = entities.length;
		while (_g1 < _g) {
			int i = _g1++;
			[self infos:[entities hx_objectAtIndex:i]];
			[self eq:[[[Parser parse:[entities hx_objectAtIndex:i]] firstChild] get_nodeValue] v2:[values hx_objectAtIndex:i] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"227", @"className":@"unit.TestXML", @"methodName":@"testCustomXmlParser"}];
		}
	}
	
	NSMutableString *s = [@"<a>&gt;<b>&lt;</b>&lt;&gt;<b>&gt;&lt;</b>\"</a>" mutableCopy];
	
	Xml *xml = [Parser parse:s];
	[self eq:s v2:[xml toString] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"232", @"className":@"unit.TestXML", @"methodName":@"testCustomXmlParser"}];
}
- (void) testMore{
	
	Xml *doc = [Xml parse:[@"<a>A</a><i>I</i>" mutableCopy]];
	
	Xml *aElement = [[doc elementsNamed:[@"a" mutableCopy]][@"next"]];
	
	Xml *iElement = [[doc elementsNamed:[@"i" mutableCopy]][@"next"]];
	[iElement addChild:aElement];
	[self eq:[doc toString] v2:[@"<i>I<a>A</a></i>" mutableCopy] pos:@{@"fileName":@"TestXML.hx", @"lineNumber":@"241", @"className":@"unit.TestXML", @"methodName":@"testMore"}];
}

@end
