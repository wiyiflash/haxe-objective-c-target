//
//  Template
//  Tests
//
//  Source generated by Haxe Objective-C target
//

typedef enum{
	OpVar,
	OpExpr,
	OpIf,
	OpStr,
	OpBlock,
	OpForeach,
	OpMacro
} TemplateExpr;


#import "../EReg.h"
#import "../haxe/Template.h"
#import "../List.h"
#import "../StringBuf.h"
#import "../String.h"
#import "../Reflect.h"
#import "../Array.h"
#import "../Std.h"

@interface Template : NSObject

+ (EReg*) splitter;
+ (void) setSplitter:(EReg*)val;
+ (EReg*) expr_splitter;
+ (void) setExpr_splitter:(EReg*)val;
+ (EReg*) expr_trim;
+ (void) setExpr_trim:(EReg*)val;
+ (EReg*) expr_int;
+ (void) setExpr_int:(EReg*)val;
+ (EReg*) expr_float;
+ (void) setExpr_float:(EReg*)val;
+ (id) globals;
+ (void) setGlobals:(id)val;
@property (nonatomic) TemplateExpr *expr;
@property (nonatomic) id context;
@property (nonatomic) id macros;
@property (nonatomic, strong) List *stack;
@property (nonatomic, strong) StringBuf *buf;
- (NSMutableString*) execute:(id)context macros:(id)macros;
- (id) resolve:(NSMutableString*)v;
- (List*) parseTokens:(NSMutableString*)data;
- (TemplateExpr*) parseBlock:(List*)tokens;
- (TemplateExpr*) parse:(List*)tokens;
- (id) parseExpr:(NSMutableString*)data;
- (id) makeConst:(NSMutableString*)v;
- (id) makePath:(id)e l:(List*)l;
- (id) makeExpr:(List*)l;
- (id) makeExpr2:(List*)l;
- (void) run:(TemplateExpr*)e;
- (id) init:(NSMutableString*)str;

@end

